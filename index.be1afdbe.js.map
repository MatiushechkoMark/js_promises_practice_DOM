{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAO,SAAS,aAAa,CAAC,QAGpC,EAAK,gBAAgB,CAAC,cAAe,SAAC,CAAtC,EACE,EAAI,cAAc,EACpB,GAEA,IAAM,EAAmB,SAAC,CAAA,CAAS,CAAnC,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,WAAW,CAAG,EAC3B,EAAa,SAAS,CAAG,eAErB,AAAS,UAAT,EACF,EAAa,SAAS,CAAC,GAAG,CAAC,SAE3B,EAAa,SAAS,CAAC,GAAG,CAAC,WAG7B,EAAK,WAAW,CAAC,EACnB,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAY,WAAW,WAC3B,EACE,AAAI,MAAM,0DAEd,EAAG,KAEH,EAAK,gBAAgB,CAAC,QAAS,WAC7B,aAAa,GACb,EAAQ,6DACV,EACF,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAc,SAAC,CAArB,EACM,CAAA,AAAe,IAAf,EAAI,MAAM,EAAU,AAAe,IAAf,EAAI,MAAM,AAAK,IACrC,EAAQ,+BACR,EAAK,mBAAmB,CAAC,QAAS,GAClC,EAAK,mBAAmB,CAAC,cAAe,GAE5C,EAEA,EAAK,gBAAgB,CAAC,QAAS,GAC/B,EAAK,gBAAgB,CAAC,cAAe,EACvC,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAgB,CAAA,EAChB,EAAiB,CAAA,EAEf,EAAc,WACd,GAAiB,IACnB,EACE,6EAGF,EAAK,mBAAmB,CAAC,QAAS,GAClC,EAAK,mBAAmB,CAAC,cAAe,GAE5C,EAEM,EAAmB,SAAC,CAA1B,EACqB,IAAf,EAAI,MAAM,GACZ,EAAgB,CAAA,EAChB,IAEJ,EAEM,EAAoB,SAAC,CAA3B,EACqB,IAAf,EAAI,MAAM,GACZ,EAAiB,CAAA,EACjB,IAEJ,EAEA,EAAK,gBAAgB,CAAC,QAAS,GAC/B,EAAK,gBAAgB,CAAC,cAAe,EACvC,GAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAiB,EAAS,UAC5B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAiB,EAAM,OAAO,CAAE,QAClC,GAEF,EAAc,IAAI,CAAC,SAAC,CAApB,EACE,EAAiB,EAAS,UAC5B,GAEA,EAAa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAiB,EAAS,UAC5B,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var body = document.querySelector(\"body\");\n    // Предотвращаем стандартное действие для контекстного меню\n    body.addEventListener(\"contextmenu\", function(eve) {\n        eve.preventDefault();\n    });\n    var showNotification = function(message, type) {\n        var notification = document.createElement(\"div\");\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.textContent = message;\n        notification.className = \"notification\";\n        if (type === \"error\") notification.classList.add(\"error\");\n        else notification.classList.add(\"success\");\n        body.appendChild(notification);\n    };\n    var firstPromise = new Promise(function(resolve, reject) {\n        var timeoutId = setTimeout(function() {\n            reject(new Error(\"First promise was rejected in 3 seconds if not clicked\"));\n        }, 3000);\n        body.addEventListener(\"click\", function() {\n            clearTimeout(timeoutId);\n            resolve(\"First promise was resolved on a left click in the document\");\n        });\n    });\n    var secondPromise = new Promise(function(resolve) {\n        var handleClick = function(eve) {\n            if (eve.button === 0 || eve.button === 2) {\n                resolve(\"Second promise was resolved\");\n                body.removeEventListener(\"click\", handleClick);\n                body.removeEventListener(\"contextmenu\", handleClick);\n            }\n        };\n        body.addEventListener(\"click\", handleClick);\n        body.addEventListener(\"contextmenu\", handleClick);\n    });\n    var thirdPromise = new Promise(function(resolve) {\n        var leftClickDone = false;\n        var rightClickDone = false;\n        var checkClicks = function() {\n            if (leftClickDone && rightClickDone) {\n                resolve(\"Third promise was resolved only after both left and right clicks happened\");\n                body.removeEventListener(\"click\", leftClickHandler);\n                body.removeEventListener(\"contextmenu\", rightClickHandler);\n            }\n        };\n        var leftClickHandler = function(eve) {\n            if (eve.button === 0) {\n                leftClickDone = true;\n                checkClicks();\n            }\n        };\n        var rightClickHandler = function(eve) {\n            if (eve.button === 2) {\n                rightClickDone = true;\n                checkClicks();\n            }\n        };\n        body.addEventListener(\"click\", leftClickHandler);\n        body.addEventListener(\"contextmenu\", rightClickHandler);\n    });\n    firstPromise.then(function(message) {\n        showNotification(message, \"success\");\n    }).catch(function(error) {\n        showNotification(error.message, \"error\");\n    });\n    secondPromise.then(function(message) {\n        showNotification(message, \"success\");\n    });\n    thirdPromise.then(function(message) {\n        showNotification(message, \"success\");\n    });\n});\n\n//# sourceMappingURL=index.be1afdbe.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n\n  // Предотвращаем стандартное действие для контекстного меню\n  body.addEventListener('contextmenu', (eve) => {\n    eve.preventDefault();\n  });\n\n  const showNotification = (message, type) => {\n    const notification = document.createElement('div');\n\n    notification.setAttribute('data-qa', 'notification');\n    notification.textContent = message;\n    notification.className = 'notification';\n\n    if (type === 'error') {\n      notification.classList.add('error');\n    } else {\n      notification.classList.add('success');\n    }\n\n    body.appendChild(notification);\n  };\n\n  const firstPromise = new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(\n        new Error('First promise was rejected in 3 seconds if not clicked'),\n      );\n    }, 3000);\n\n    body.addEventListener('click', () => {\n      clearTimeout(timeoutId);\n      resolve('First promise was resolved on a left click in the document');\n    });\n  });\n\n  const secondPromise = new Promise((resolve) => {\n    const handleClick = (eve) => {\n      if (eve.button === 0 || eve.button === 2) {\n        resolve('Second promise was resolved');\n        body.removeEventListener('click', handleClick);\n        body.removeEventListener('contextmenu', handleClick);\n      }\n    };\n\n    body.addEventListener('click', handleClick);\n    body.addEventListener('contextmenu', handleClick);\n  });\n\n  const thirdPromise = new Promise((resolve) => {\n    let leftClickDone = false;\n    let rightClickDone = false;\n\n    const checkClicks = () => {\n      if (leftClickDone && rightClickDone) {\n        resolve(\n          'Third promise was resolved only after both left and right clicks ' +\n            'happened',\n        );\n        body.removeEventListener('click', leftClickHandler);\n        body.removeEventListener('contextmenu', rightClickHandler);\n      }\n    };\n\n    const leftClickHandler = (eve) => {\n      if (eve.button === 0) {\n        leftClickDone = true;\n        checkClicks();\n      }\n    };\n\n    const rightClickHandler = (eve) => {\n      if (eve.button === 2) {\n        rightClickDone = true;\n        checkClicks();\n      }\n    };\n\n    body.addEventListener('click', leftClickHandler);\n    body.addEventListener('contextmenu', rightClickHandler);\n  });\n\n  firstPromise\n    .then((message) => {\n      showNotification(message, 'success');\n    })\n    .catch((error) => {\n      showNotification(error.message, 'error');\n    });\n\n  secondPromise.then((message) => {\n    showNotification(message, 'success');\n  });\n\n  thirdPromise.then((message) => {\n    showNotification(message, 'success');\n  });\n});\n"],"names":["document","addEventListener","body","querySelector","eve","preventDefault","showNotification","message","type","notification","createElement","setAttribute","textContent","className","classList","add","appendChild","firstPromise","Promise","resolve","reject","timeoutId","setTimeout","Error","clearTimeout","secondPromise","handleClick","button","removeEventListener","thirdPromise","leftClickDone","rightClickDone","checkClicks","leftClickHandler","rightClickHandler","then","catch","error"],"version":3,"file":"index.be1afdbe.js.map"}