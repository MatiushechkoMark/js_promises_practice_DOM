{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,2DAA2D;IAC3D,KAAK,gBAAgB,CAAC,eAAe,CAAC;QACpC,IAAI,cAAc;IACpB;IAEA,MAAM,mBAAmB,CAAC,SAAS;QACjC,MAAM,eAAe,SAAS,aAAa,CAAC;QAE5C,aAAa,YAAY,CAAC,WAAW;QACrC,aAAa,WAAW,GAAG;QAC3B,aAAa,SAAS,GAAG;QAEzB,IAAI,SAAS,SACX,aAAa,SAAS,CAAC,GAAG,CAAC;aAE3B,aAAa,SAAS,CAAC,GAAG,CAAC;QAG7B,KAAK,WAAW,CAAC;IACnB;IAEA,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS;QACzC,MAAM,YAAY,WAAW;YAC3B,OACE,IAAI,MAAM;QAEd,GAAG;QAEH,KAAK,gBAAgB,CAAC,SAAS;YAC7B,aAAa;YACb,QAAQ;QACV;IACF;IAEA,MAAM,gBAAgB,IAAI,QAAQ,CAAC;QACjC,MAAM,cAAc,CAAC;YACnB,IAAI,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,GAAG;gBACxC,QAAQ;gBACR,KAAK,mBAAmB,CAAC,SAAS;gBAClC,KAAK,mBAAmB,CAAC,eAAe;YAC1C;QACF;QAEA,KAAK,gBAAgB,CAAC,SAAS;QAC/B,KAAK,gBAAgB,CAAC,eAAe;IACvC;IAEA,MAAM,eAAe,IAAI,QAAQ,CAAC;QAChC,IAAI,gBAAgB;QACpB,IAAI,iBAAiB;QAErB,MAAM,cAAc;YAClB,IAAI,iBAAiB,gBAAgB;gBACnC,QACE;gBAGF,KAAK,mBAAmB,CAAC,SAAS;gBAClC,KAAK,mBAAmB,CAAC,eAAe;YAC1C;QACF;QAEA,MAAM,mBAAmB,CAAC;YACxB,IAAI,IAAI,MAAM,KAAK,GAAG;gBACpB,gBAAgB;gBAChB;YACF;QACF;QAEA,MAAM,oBAAoB,CAAC;YACzB,IAAI,IAAI,MAAM,KAAK,GAAG;gBACpB,iBAAiB;gBACjB;YACF;QACF;QAEA,KAAK,gBAAgB,CAAC,SAAS;QAC/B,KAAK,gBAAgB,CAAC,eAAe;IACvC;IAEA,aACG,IAAI,CAAC,CAAC;QACL,iBAAiB,SAAS;IAC5B,GACC,KAAK,CAAC,CAAC;QACN,iBAAiB,MAAM,OAAO,EAAE;IAClC;IAEF,cAAc,IAAI,CAAC,CAAC;QAClB,iBAAiB,SAAS;IAC5B;IAEA,aAAa,IAAI,CAAC,CAAC;QACjB,iBAAiB,SAAS;IAC5B;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const body = document.querySelector('body');\n\n  // Предотвращаем стандартное действие для контекстного меню\n  body.addEventListener('contextmenu', (eve) => {\n    eve.preventDefault();\n  });\n\n  const showNotification = (message, type) => {\n    const notification = document.createElement('div');\n\n    notification.setAttribute('data-qa', 'notification');\n    notification.textContent = message;\n    notification.className = 'notification';\n\n    if (type === 'error') {\n      notification.classList.add('error');\n    } else {\n      notification.classList.add('success');\n    }\n\n    body.appendChild(notification);\n  };\n\n  const firstPromise = new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(\n        new Error('First promise was rejected in 3 seconds if not clicked'),\n      );\n    }, 3000);\n\n    body.addEventListener('click', () => {\n      clearTimeout(timeoutId);\n      resolve('First promise was resolved on a left click in the document');\n    });\n  });\n\n  const secondPromise = new Promise((resolve) => {\n    const handleClick = (eve) => {\n      if (eve.button === 0 || eve.button === 2) {\n        resolve('Second promise was resolved');\n        body.removeEventListener('click', handleClick);\n        body.removeEventListener('contextmenu', handleClick);\n      }\n    };\n\n    body.addEventListener('click', handleClick);\n    body.addEventListener('contextmenu', handleClick);\n  });\n\n  const thirdPromise = new Promise((resolve) => {\n    let leftClickDone = false;\n    let rightClickDone = false;\n\n    const checkClicks = () => {\n      if (leftClickDone && rightClickDone) {\n        resolve(\n          'Third promise was resolved only after both left and right clicks ' +\n            'happened',\n        );\n        body.removeEventListener('click', leftClickHandler);\n        body.removeEventListener('contextmenu', rightClickHandler);\n      }\n    };\n\n    const leftClickHandler = (eve) => {\n      if (eve.button === 0) {\n        leftClickDone = true;\n        checkClicks();\n      }\n    };\n\n    const rightClickHandler = (eve) => {\n      if (eve.button === 2) {\n        rightClickDone = true;\n        checkClicks();\n      }\n    };\n\n    body.addEventListener('click', leftClickHandler);\n    body.addEventListener('contextmenu', rightClickHandler);\n  });\n\n  firstPromise\n    .then((message) => {\n      showNotification(message, 'success');\n    })\n    .catch((error) => {\n      showNotification(error.message, 'error');\n    });\n\n  secondPromise.then((message) => {\n    showNotification(message, 'success');\n  });\n\n  thirdPromise.then((message) => {\n    showNotification(message, 'success');\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}